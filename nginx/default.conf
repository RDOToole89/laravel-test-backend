server {
    listen 80;
    index index.php index.html;
    server_name localhost;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/html/public;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}


# The nginx/default.conf file is a configuration file for the Nginx web server. In a typical Laravel application, this file is used to configure Nginx to serve the application.

# Here's an explanation of each section of the configuration:

#     Server Block:
#         listen 80: Specifies that Nginx should listen on port 80 for incoming HTTP requests.
#         index index.php index.html;: Defines the order of index files to look for when a directory is requested. In this case, Nginx will first look for index.php, and if not found, it will look for index.html.
#         server_name localhost;: Specifies the domain name for which this server block will be used. In this case, it's set to localhost.
#         error_log /var/log/nginx/error.log;: Specifies the location of the error log file for Nginx.
#         access_log /var/log/nginx/access.log;: Specifies the location of the access log file for Nginx.
#         root /var/www/html/public;: Defines the root directory of the Laravel application. This is where the index.php file of the Laravel application resides.

#     Location Blocks:
#         location / { ... }: Defines the configuration for handling requests to the root (/) URL. It uses the try_files directive to attempt to serve the requested file directly, and if that fails, it passes the request to index.php along with any query parameters.
#         location ~ \.php$ { ... }: Defines the configuration for handling requests ending in .php. It uses the try_files directive to attempt to serve the requested PHP file, and if that fails, it returns a 404 error. It also configures FastCGI to pass PHP requests to the PHP-FPM service (app:9000), which is typically running in a separate Docker container.

# Overall, this configuration file sets up Nginx to serve a Laravel application by directing requests to the appropriate PHP files and handling static files efficiently. It's a standard configuration for Laravel applications running on Nginx.